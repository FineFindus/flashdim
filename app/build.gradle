plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jmailen.kotlinter' version '4.1.0' // lintKotlin, formatKotlin
    id 'com.getkeepsafe.dexcount' version '4.0.0' // :app:countReleaseDexMethods
}

android {
    namespace 'com.cyb3rko.flashdim'

    compileSdk 34
    defaultConfig {
        applicationId 'com.cyb3rko.flashdim'
        minSdk 33
        targetSdk 34
        versionCode 21
        versionName '2.2.1'
        resValue 'string', 'app_name', 'FlashDim Dev'
        resourceConfigurations += ['en']
        signingConfig signingConfigs.debug
    }
    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix '.dev'
        }
        benchmark {
            initWith release
            matchingFallbacks = ['release']
            debuggable false
        }
        release {
            resValue 'string', 'app_name', 'FlashDim'
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
    bundle {
        storeArchive {
            enable = false
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/*.version']
        }
    }
}

if (project.hasProperty('sign')) {
    android {
        signingConfigs {
            release {
                storeFile file(System.getenv('KEYSTORE_FILE'))
                storePassword System.getenv('KEYSTORE_PASSWD')
                keyAlias System.getenv('KEYSTORE_KEY_ALIAS')
                keyPassword System.getenv('KEYSTORE_KEY_PASSWD')
            }
        }
    }
    android.buildTypes.release.signingConfig android.signingConfigs.release
}

if (project.hasProperty('gplay_upload')) {
    android {
        signingConfigs {
            upload {
                Properties properties = new Properties()
                properties.load(project.rootProject.file('local.properties').newDataInputStream())

                storeFile file(properties.getProperty('uploadsigning.file'))
                storePassword properties.getProperty('uploadsigning.password')
                keyAlias properties.getProperty('uploadsigning.key.alias')
                keyPassword properties.getProperty('uploadsigning.key.password')
            }
        }
    }
    android.buildTypes.release.signingConfig android.signingConfigs.upload
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.profileinstaller:profileinstaller:1.3.1'
}

configurations {
    configureEach {
        exclude group: 'androidx.lifecycle', module: 'lifecycle-viewmodel-ktx'
    }
}